#REST Assured RequestSpecification parameters:
e2etest.baseURI=http://localhost
e2etest.port=9090
e2etest.basePathForPost=post
e2etest.basePathForDelete=post/delete/{postId}

#Connecting to an Encrypted Database:
e2etest.dbDriver=org.h2.Driver
e2etest.dbConnection=jdbc:h2:tcp://localhost/~/test;AUTO_SERVER=TRUE
e2etest.dbUser=
e2etest.dbPassword=

#SQL queries:
e2etest.dropPostsTableQuery=DROP TABLE IF EXISTS POSTS;
e2etest.createPostsTableQuery=CREATE TABLE POSTS (POST_ID varchar(50), POST_TEXT varchar(?), USER_ID varchar(50));
e2etest.dropUsersTableQuery=DROP TABLE IF EXISTS USERS;
e2etest.createUsersTableQuery=CREATE TABLE USERS ( USER_ID varchar(50), USER_NAME varchar(50));
e2etest.insertRecordIntoUsersTableQuery=INSERT INTO USERS (USER_ID, USER_NAME) SELECT ?, ? WHERE NOT EXISTS (SELECT 1 FROM USERS WHERE USER_NAME = ?);
e2etest.insertRecordIntoPostsTableQuery=INSERT INTO POSTS(POST_ID, POST_TEXT, USER_ID) VALUES (?, ?, ?);
e2etest.deleteRecordFromPostsTableQuery=DELETE FROM POSTS WHERE POST_ID = ?;
e2etest.selectCountFromPostsTableQuery=SELECT COUNT (*) FROM POSTS P JOIN USERS U ON P.USER_ID = U.USER_ID AND U.USER_NAME = ? AND P.POST_TEXT = ?;
e2etest.selectPostIdFromPostsTableQuery=SELECT P.POST_ID FROM POSTS P JOIN USERS U ON P.USER_ID = U.USER_ID AND U.USER_NAME = ? AND P.POST_TEXT = ?;
e2etest.selectUserIdFromUsersTableQuery=SELECT USER_ID FROM USERS WHERE USER_NAME = ?;
e2etest.deleteFromUsersTableQuery=DELETE FROM USERS;
e2etest.deleteFromPostsTableQuery=DELETE FROM POSTS;